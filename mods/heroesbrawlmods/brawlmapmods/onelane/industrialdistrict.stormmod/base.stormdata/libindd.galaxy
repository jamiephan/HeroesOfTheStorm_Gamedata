include "TriggerLibs/NativeLib"
include "TriggerLibs/GameLib"

include "LibINDD_h"

//--------------------------------------------------------------------------------------------------
// Library: Industrial District
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libINDD_InitLibraries () {
    libNtve_InitVariables();
    libGame_InitVariables();
}

// Variable Initialization
bool libINDD_InitVariables_completed = false;

void libINDD_InitVariables () {
    if (libINDD_InitVariables_completed) {
        return;
    }

    libINDD_InitVariables_completed = true;

}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Gates Open
//--------------------------------------------------------------------------------------------------
bool libINDD_gt_GatesOpen_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_generator;

    // Automatic Variable Declarations
    unitgroup auto48D41B8F_g;
    int auto48D41B8F_u;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto48D41B8F_g = UnitGroup("RegenGlobeGenerator", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto48D41B8F_u = UnitGroupCount(auto48D41B8F_g, c_unitCountAll);
    for (;; auto48D41B8F_u -= 1) {
        lv_generator = UnitGroupUnitFromEnd(auto48D41B8F_g, auto48D41B8F_u);
        if (lv_generator == null) { break; }
        UnitBehaviorSetDuration(lv_generator, "GenerateRegenGlobe", libINDD_gv_regenGlobeCoolupTime_C);
        libNtve_gf_SendActorMessageToUnit(lv_generator, "Signal RegenGlobeDurationRefreshed");
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libINDD_gt_GatesOpen_Init () {
    libINDD_gt_GatesOpen = TriggerCreate("libINDD_gt_GatesOpen_Func");
    TriggerAddEventTimer(libINDD_gt_GatesOpen, libGame_gv_openTheGatesTimer);
}

void libINDD_InitTriggers () {
    libINDD_gt_GatesOpen_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libINDD_InitLib_completed = false;

void libINDD_InitLib () {
    if (libINDD_InitLib_completed) {
        return;
    }

    libINDD_InitLib_completed = true;

    libINDD_InitLibraries();
    libINDD_InitVariables();
    libINDD_InitTriggers();
}

