include "TriggerLibs/NativeLib"
include "TriggerLibs/HeroesLib"
include "TriggerLibs/GameLib"
include "TriggerLibs/UILib"

include "LibMLCN_h"

//--------------------------------------------------------------------------------------------------
// Library: Lost Cavern
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libMLCN_InitLibraries () {
    libNtve_InitVariables();
    libCore_InitVariables();
    libGame_InitVariables();
    libUIUI_InitVariables();
}

// Variable Initialization
bool libMLCN_InitVariables_completed = false;

void libMLCN_InitVariables () {
    if (libMLCN_InitVariables_completed) {
        return;
    }

    libMLCN_InitVariables_completed = true;

}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: MMLostCavern Init
//--------------------------------------------------------------------------------------------------
bool libMLCN_gt_MMLostCavernInit_Func (bool testConds, bool runActions) {
    // Conditions
    if (testConds) {
        if (!((libGame_gf_MapMechanicInitializationMechanicType() == libMLCN_gv_mMLostCavernMechanicName_C))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(libMLCN_gt_MMLostCavernUILightingInit, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libMLCN_gt_MMLostCavernInit_Init () {
    libMLCN_gt_MMLostCavernInit = TriggerCreate("libMLCN_gt_MMLostCavernInit_Func");
    libGame_gf_MapMechanicInitialization(libMLCN_gt_MMLostCavernInit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MMLostCavern Announcer Init
//--------------------------------------------------------------------------------------------------
bool libMLCN_gt_MMLostCavernAnnouncerInit_Func (bool testConds, bool runActions) {
    // Actions
    if (!runActions) {
        return true;
    }

    libCore_gf_DataAnnouncerVOSetDefaultAnnouncerForPlayerGroup(PlayerGroupAll(), "SpiderQueen");
    return true;
}

//--------------------------------------------------------------------------------------------------
void libMLCN_gt_MMLostCavernAnnouncerInit_Init () {
    libMLCN_gt_MMLostCavernAnnouncerInit = TriggerCreate("libMLCN_gt_MMLostCavernAnnouncerInit_Func");
    libCore_gf_IncludeModInitialization(libMLCN_gt_MMLostCavernAnnouncerInit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MMLostCavern UI Lighting Init
//--------------------------------------------------------------------------------------------------
bool libMLCN_gt_MMLostCavernUILightingInit_Func (bool testConds, bool runActions) {
    int auto97FD83F1_ae;
    int auto97FD83F1_ai;

    // Variable Declarations
    int lv_itPlayer;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto97FD83F1_ae = libCore_gv_bALMaxPlayers;
    auto97FD83F1_ai = 1;
    lv_itPlayer = 1;
    for ( ; ( (auto97FD83F1_ai >= 0 && lv_itPlayer <= auto97FD83F1_ae) || (auto97FD83F1_ai <= 0 && lv_itPlayer >= auto97FD83F1_ae) ) ; lv_itPlayer += auto97FD83F1_ai ) {
        libUIUI_gf_VignetteOverlayPlayForPlayer(lv_itPlayer, "Cutscenes\\GameUI_SoulCageVignetteOverlay.StormCutscene");
    }
    libUIUI_gf_VignetteOverlayPlayForPlayer(libCore_gv_oBSERVER_ObserverUIPlayer, "Cutscenes\\GameUI_SoulCageVignetteOverlay.StormCutscene");
    return true;
}

//--------------------------------------------------------------------------------------------------
void libMLCN_gt_MMLostCavernUILightingInit_Init () {
    libMLCN_gt_MMLostCavernUILightingInit = TriggerCreate("libMLCN_gt_MMLostCavernUILightingInit_Func");
}

void libMLCN_InitTriggers () {
    libMLCN_gt_MMLostCavernInit_Init();
    libMLCN_gt_MMLostCavernAnnouncerInit_Init();
    libMLCN_gt_MMLostCavernUILightingInit_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libMLCN_InitLib_completed = false;

void libMLCN_InitLib () {
    if (libMLCN_InitLib_completed) {
        return;
    }

    libMLCN_InitLib_completed = true;

    libMLCN_InitLibraries();
    libMLCN_InitVariables();
    libMLCN_InitTriggers();
}

