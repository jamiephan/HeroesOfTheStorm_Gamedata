include "TriggerLibs/HeroesLib"
include "TriggerLibs/GameLib"

//--------------------------------------------------------------------------------------------------
// Library: Deadmans Stand (Mod)
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libPEB1_ge_PVEMinionWaveRallyLocation_PVEMinionWaveRallyLocation_Core = 0;
const int libPEB1_ge_PVEMinionWaveRallyLocation_PVEMinionWaveRallyLocation_Inner = 1;
const int libPEB1_ge_PVEMinionWaveRallyLocation_PVEMinionWaveRallyLocation_Outer = 2;
const int libPEB1_ge_Lane_Top = 0;
const int libPEB1_ge_Lane_Bottom = 1;
const int libPEB1_ge_ZergHeroState_NotYetSpawned = 0;
const int libPEB1_ge_ZergHeroState_Alive = 1;
const int libPEB1_ge_ZergHeroState_Dead = 2;
const int libPEB1_ge_ArchangelAreaType_None = 0;
const int libPEB1_ge_ArchangelAreaType_Loadout1 = 1;
const int libPEB1_ge_ArchangelAreaType_Loadout2 = 2;
const int libPEB1_ge_ArchangelAreaType_Loadout3 = 3;
const int libPEB1_ge_ArchangelAreaType_Loadout4 = 4;
const int libPEB1_ge_ArchangelAreaSide_Top = 0;
const int libPEB1_ge_ArchangelAreaSide_Bottom = 1;
const int libPEB1_ge_ArchangelAreaSide_Left = 2;
const int libPEB1_ge_ArchangelAreaSide_Right = 3;
const int libPEB1_ge_DefeatReason_None = 0;
const int libPEB1_ge_DefeatReason_AllHeroesSlain = 1;
const int libPEB1_ge_DefeatReason_BaseDead = 2;
const int libPEB1_ge_PZEObjectivePanelState_OnTimer = 0;
const int libPEB1_ge_PZEObjectivePanelState_Complete = 1;
const int libPEB1_ge_PZEHoldoutPanelState_OnTimer = 0;
const int libPEB1_ge_PZEHoldoutPanelState_Complete = 1;

// Constants
const int libPEB1_gv_pVEMinionWaveMaxRallyLocations_C = 3;
const int libPEB1_gv_pVEMinionWaveMaxUnitsOfTypePerLane_C = 5;
const int libPEB1_gv_pVEMinionWaveNumberOfMinionTypes_C = 3;
const fixed libPEB1_gv_archangelDropshipDuration = 30.0;
const fixed libPEB1_gv_holdout1_Duration_C = 170.0;
const int libPEB1_gv_holdout1_WaveTotal_C = 6;
const fixed libPEB1_gv_holdout2_Duration_C = 165.0;
const int libPEB1_gv_holdout2_WaveTotal_C = 6;
const fixed libPEB1_gv_holdout3_Duration_C = 180.0;
const fixed libPEB1_gv_archangel1_Duration_C = 240.0;
const fixed libPEB1_gv_archangel2_Duration_C = 300.0;

// Structures
struct libPEB1_gs_PVEMinionWaveRally {
    point[libPEB1_gv_pVEMinionWaveMaxRallyLocations_C + 1][libPEB1_gv_pVEMinionWaveNumberOfMinionTypes_C + 1][libPEB1_gv_pVEMinionWaveMaxUnitsOfTypePerLane_C + 1] lv_rallyPosition;
    unitgroup[libPEB1_gv_pVEMinionWaveMaxRallyLocations_C + 1] lv_rallyStructureGroup;
};

struct libPEB1_gs_ZergHero {
    string lv_hero;
    timer lv_respawnTimer;
    bool lv_active;
    int lv_state;
};

struct libPEB1_gs_Hatchery {
    unit lv_structure;
    region lv_defenseRegion;
    unitgroup lv_defenderGroup;
    bool lv_aggroed;
    region lv_spawnRegion;
    bool lv_aI_On;
    region lv_homeRegion;
};

struct libPEB1_gs_ArchangelArea {
    region lv_region;
    int lv_type;
    actor[256] lv_doodads;
    int[256] lv_doodadTypes;
    int lv_doodadCount;
    revealer lv_revealer;
    int lv_archangelPing;
    unit lv_archangelUnit;
    string lv_defenseHero;
    point[4] lv_defenseHeroRandomSpawns;
    point lv_zagaraSpawn;
    bool lv_areaDefeated;
    fixed lv_width;
    fixed lv_height;
    bool lv_aggroed;
    bool lv_aIScriptActive;
    unit[3] lv_nukeSilos;
};

struct libPEB1_gs_MarineRescueData {
    point[4] lv_marineSpawnLocation;
    region lv_revealRegion;
    region lv_rescueRegion;
    region lv_zergSpawnRegion;
    unitgroup lv_marineGroup;
    unitgroup lv_zergGroup;
    bool lv_revealed;
    bool lv_rescued;
    actor lv_rescueReticle;
    int lv_rescueTextTag;
};

struct libPEB1_gs_CreepCamp {
    point lv_pingPoint;
    region lv_aggroRegion;
    region lv_leashRegion;
    point[5] lv_spawnPoints;
    bool lv_status;
    actor lv_captureSlab;
    int lv_defenderAI_Index;
    unitgroup lv_defenderUnits;
    int lv_currentScaling;
    bool lv_defenderGroupAlive;
    timer lv_respawnTimer;
    timer lv_buffTimerXXXXXXXXXXXXXXXXXXX;
    int lv_lane;
    unit lv_iconUnit;
    int lv_helperTextTag;
    unit lv_sconceUnit;
    unitgroup lv_outerStructures;
    unitgroup lv_innerStructures;
    int lv_path;
};

struct libPEB1_gs_PZEObjectivePanel {
    int lv_objectivePanel;
    int lv_objectivePanelIcon;
    int lv_objectivePanelIconCompleted;
    int lv_objectivePanelInfoLabel1;
    int lv_objectivePanelInfoLabel2;
    int lv_objectivePanelInfoLabel3;
    int lv_objectivePanelTimerLabel1;
    int lv_objectivePanelTimerLabel2;
    int lv_objectivePanelMissionSuccessfulFrame;
    int lv_objectivePanelMissionSuccessfulLabel;
    timer lv_objectivePanelTimer;
    int lv_state;
};

struct libPEB1_gs_PZEHoldoutPanel {
    int lv_timerPanel;
    int lv_timerPanelTimerLabel;
    int lv_timerPanelIconArchangel;
    int lv_timerPanelIconArchangelDefeated;
    int lv_timerPanelIconZerg;
    int lv_timerPanelIconDefense;
    int lv_timerPanelInfoLabel;
    timer lv_timerPanelTimer;
    int lv_state;
};

struct libPEB1_gs_PZEScoreScreenPanel {
    int lv_mainPanel;
    int lv_timeLabel;
    int lv_closeButton;
};

struct libPEB1_gs_PZETabScreenPanel {
    int lv_mainPanel;
    int lv_tabControl;
    int lv_timeRunSubPanel;
    int lv_currentTimeLabel;
    int lv_previousBestTimeLabel;
    int lv_epicRunTime;
};

struct libPEB1_gs_BaseHealthBar {
    int lv_baseHealthPanel;
    int lv_baseHealthLabel;
    int lv_basePercentLabel;
    int lv_baseCoreLabel;
    int lv_baseCoreBar;
    int lv_baseCoreBarBg;
    bool lv_baseCoreFlashing;
    int lv_baseKeepLabel;
    int lv_baseKeepBar;
    int lv_baseKeepBarBg;
    bool lv_baseKeepFlashing;
    int lv_baseBunkersLabel;
    int lv_baseBunkersBar;
    int lv_baseBunkersBarBg;
    bool lv_baseBunkersFlashing;
};

// Variable Declarations
int[libPEB1_gv_pVEMinionWaveNumberOfMinionTypes_C + 1] libPEB1_gv_pVEMinionWaveMaxUnitTypePerLane_C;
unitgroup[libGame_gv_laneMaxCount_C + 1][libPEB1_gv_pVEMinionWaveNumberOfMinionTypes_C + 1] libPEB1_gv_pVEMinionWaveMinionsGroups;
unitgroup[libGame_gv_laneMaxCount_C + 1] libPEB1_gv_pVEMinionWaveMinionsInLane;
libPEB1_gs_PVEMinionWaveRally[libGame_gv_laneMaxCount_C + 1] libPEB1_gv_pVEMinionWaveMinionRally;
unitgroup libPEB1_gv_civilianRunners;
region libPEB1_gv_civilianRunnerDestination_C;
region libPEB1_gv_civilianRunnerFade_C;
revealer[3] libPEB1_gv_baseRevealers;
point libPEB1_gv_bunkerFortressPingPoint;
bool[4] libPEB1_gv_bunkersAlive;
unit[4] libPEB1_gv_topBunkers;
unit[4] libPEB1_gv_bottomBunkers;
unitgroup libPEB1_gv_activeZergMinions;
fixed libPEB1_gv_hardMinionDamageBonus;
bool libPEB1_gv_noAbathurSecondChance;
unit libPEB1_gv_murkyEggUnit;
timer libPEB1_gv_murkyDeathTimer;
fixed libPEB1_gv_murkyRespawnDelay;
bool libPEB1_gv_noMurkySecondChance;
libPEB1_gs_ZergHero[6] libPEB1_gv_zergHeroes;
int libPEB1_gv_zergHeroSpawnCounter;
fixed libPEB1_gv_zergHeroRespawnTime;
unitgroup libPEB1_gv_activeZergHeroes;
string[3] libPEB1_gv_zergHeroBalanceBehavior;
string[16] libPEB1_gv_availableHeroTypes;
string[16] libPEB1_gv_availableHeroTypesDefense;
int libPEB1_gv_availableHeroTypesCount;
int libPEB1_gv_availableHeroTypesDefenseCount;
fixed libPEB1_gv_hardHeroHPBonus;
int libPEB1_gv_zergHeroLevel;
int libPEB1_gv_zergHeroLevelBonus;
bool libPEB1_gv_spawnMurkyForFinalHoldout;
region[5] libPEB1_gv_zergSpawnRegions;
int libPEB1_gv_basicWaveEscalationCount;
fixed libPEB1_gv_basicWaveDelay;
bool libPEB1_gv_basicWavePaused;
unitgroup libPEB1_gv_globalAttackGroup;
fixed libPEB1_gv_nydusWormSpawnInterval;
bool libPEB1_gv_pauseNydusSpawning;
unitgroup libPEB1_gv_nydusGroup;
libPEB1_gs_Hatchery[32] libPEB1_gv_hatcheries;
int libPEB1_gv_hatcheryCount;
region libPEB1_gv_zergTerritory;
unit libPEB1_gv_currentScourgeMissileTargetUnit;
point libPEB1_gv_currentScourgeMissileTargetPoint;
unit libPEB1_gv_currentScourgeMissileCaster;
int libPEB1_gv_scourgeMissileTargetPing;
unitgroup libPEB1_gv_scougeNests;
libPEB1_gs_ArchangelArea[6] libPEB1_gv_archangelAreas;
int[4] libPEB1_gv_archangelSpawnOrder;
unitgroup libPEB1_gv_archangelAdds;
int libPEB1_gv_archangelsKilled;
int[11] libPEB1_gv_archangelDefenderIndex;
unit libPEB1_gv_archangelDropship;
bool[libCore_gv_bALMaxPlayers + 1] libPEB1_gv_archangelDropshipBeingUsed;
unitgroup libPEB1_gv_archangelBanelingGroup;
int libPEB1_gv_previousGapIndex;
bool[3] libPEB1_gv_bossMusicTriggered;
bool libPEB1_gv_archangelRotateClockwise;
fixed libPEB1_gv_archangelRotationSpeed;
fixed libPEB1_gv_archangelRotationAngle;
int[3] libPEB1_gv_attackWaveHeroCount;
timer libPEB1_gv_holdout1_Timer;
bool libPEB1_gv_holdout1_Started;
bool libPEB1_gv_holdout1_Complete;
int libPEB1_gv_holdout1_WaveCurrent;
bool libPEB1_gv_holdout1IntroTransmissionFinished;
timer libPEB1_gv_holdout2_Timer;
bool libPEB1_gv_holdout2_Started;
bool libPEB1_gv_holdout2_Complete;
int libPEB1_gv_holdout2_WaveCurrent;
bool libPEB1_gv_holdout2IntroTransmissionFinished;
timer libPEB1_gv_holdout3_Timer;
bool libPEB1_gv_holdout3_Started;
bool libPEB1_gv_holdout3_Complete;
bool libPEB1_gv_holdout3_PingsReady;
bool libPEB1_gv_holdout3IntroTransmissionFinished;
actor libPEB1_gv_coreChargingEffect;
actor libPEB1_gv_coreDisruptionEffect;
sound libPEB1_gv_coreChargingLoop;
string libPEB1_gv_nightLighting;
timer libPEB1_gv_archangel1_Timer;
timer libPEB1_gv_archangel2_Timer;
libPEB1_gs_MarineRescueData[11] libPEB1_gv_marineRescue;
int libPEB1_gv_marineRescueCount;
libPEB1_gs_CreepCamp[7] libPEB1_gv_creepCamps;
bool libPEB1_gv_creepCampsRevealed;
fixed libPEB1_gv_creepCampRespawnTime;
int libPEB1_gv_regenerationGlobeCounter;
int libPEB1_gv_killValueNeededToSpawnGlobe;
int libPEB1_gv_pickupSpawnCounter;
int libPEB1_gv_victoryTime;
int libPEB1_gv_defeatTime;
int libPEB1_gv_defeatReason;
int libPEB1_gv_pZEMapPanel;
libPEB1_gs_PZEObjectivePanel libPEB1_gv_pZEObjectivePanel;
libPEB1_gs_PZEHoldoutPanel libPEB1_gv_pZEHoldoutPanel;
libPEB1_gs_PZEScoreScreenPanel libPEB1_gv_pZEScoreScreenPanel;
libPEB1_gs_PZETabScreenPanel libPEB1_gv_pZETabScreenPanel;
libPEB1_gs_BaseHealthBar libPEB1_gv_baseHealthBar;
unitgroup libPEB1_gv_baseStructures;
unitgroup libPEB1_gv_baseStructuresCore;
unitgroup libPEB1_gv_baseStructuresKeep;
unitgroup libPEB1_gv_baseStructuresBunkers;
int libPEB1_gv_baseHealthBarWidthCore;
int libPEB1_gv_baseHealthBarWidthKeep;
int libPEB1_gv_baseHealthBarWidthBunker;
fixed libPEB1_gv_baseHealthPercent;
int[4] libPEB1_gv_baseHealthShrinkCurrentMarker;
unit libPEB1_gv_aIHelper_ZergMinionSeekingEnemy;
unit libPEB1_gv_aIHelper_MarineForRescue;
bool libPEB1_gv_disableZergSpawning;
bool libPEB1_gv_cheatsReady;

// Function Declarations
void libPEB1_gf_PVESpawnMinion (int lp_lane, int lp_owner, int lp_type, point lp_spawnPoint);
void libPEB1_gf_PVEMinionWaveAssignMiniontoWave (int lp_lane, unit lp_minion);
void libPEB1_gf_PVEMinionWaveIssueMinionRally ();
void libPEB1_gf_PVEMinionWaveSetRallyLocations (point lp_anchorPoint, int lp_lane, int lp_position);
void libPEB1_gf_TurnOnOffZergMinionAI (unit lp_minion, bool lp_onOff);
void libPEB1_gf_TurnOnOffZergMinionGroupAI (unitgroup lp_minions, bool lp_onOff);
point libPEB1_gf_ToxicNestSpawnPoint (point lp_point);
point libPEB1_gf_DeepTunnelTeleportLocation (point lp_point);
unit libPEB1_gf_GetBestSymbioteTarget ();
void libPEB1_gf_AbathurAI ();
void libPEB1_gf_ApplyAnubArakTalents (int lp_playerIndex);
void libPEB1_gf_ApplyButcherTalents (int lp_playerIndex);
void libPEB1_gf_ApplyDehakaTalents (int lp_playerIndex);
void libPEB1_gf_ApplyDiabloTalents (int lp_playerIndex);
void libPEB1_gf_ApplyKerriganTalents (int lp_playerIndex);
void libPEB1_gf_ApplyMurkyTalents (int lp_playerIndex);
void libPEB1_gf_ApplyStitchesTalents (int lp_playerIndex);
void libPEB1_gf_ApplyStukovTalents (int lp_playerIndex);
void libPEB1_gf_ApplyTychusTalents (int lp_playerIndex);
string libPEB1_gf_PZEZergBossSkin (string lp_boss);
text libPEB1_gf_PZEZergBossName (string lp_boss);
void libPEB1_gf_TurnOnOffZergHeroAI (unit lp_boss, bool lp_onOff);
void libPEB1_gf_SpawnZergHeroforWave (point lp_spawnLocation, unitgroup lp_waveGroup);
void libPEB1_gf_PrepareTheNextHero (int lp_index);
void libPEB1_gf_ConfigureAttackWaveWaypointsforLane (int lp_waveIndex, int lp_lane);
void libPEB1_gf_CreateBasicAttackWave (string lp_unitType1, string lp_unitType2, string lp_unitType3, int lp_count1, int lp_count2, int lp_count3, int lp_lane);
unit libPEB1_gf_NydusWormSpawn (point lp_location);
void libPEB1_gf_CreateDropPod (point lp_location, string lp_unitType, int lp_count);
void libPEB1_gf_CreateNydusWormUnits (unit lp_nydusWorm, string lp_unitType, int lp_count);
void libPEB1_gf_CreateNydusWormatPoint (point lp_point);
void libPEB1_gf_CreateEventWavePing (unitgroup lp_attackGroup, bool lp_heroic);
void libPEB1_gf_CreateEventWavePingSmallRadius (unitgroup lp_attackGroup);
void libPEB1_gf_SendEventWavewithDelay (int lp_waveIndex, unitgroup lp_attackGroup, fixed lp_delay);
void libPEB1_gf_CreateZergCamp (string lp_type1, int lp_count1, string lp_type2, int lp_count2, region lp_region);
void libPEB1_gf_InitHatchery (unit lp_hatchery);
void libPEB1_gf_RunZergCampAILoop (unitgroup lp_zergGroup, region lp_region);
void libPEB1_gf_UnburrowZergUnitforCamp (unit lp_zergUnit, region lp_region);
void libPEB1_gf_UnburrowZergUnitforHatcheryDefense (unit lp_zergUnit, point lp_attackPoint);
void libPEB1_gf_BurrowZergUnitGroup (unitgroup lp_zergGroup);
void libPEB1_gf_SpawnZergDefendersforHatchery (int lp_hatcheryIndex, unitgroup lp_nearbyPlayerUnits);
bool libPEB1_gf_ValidOrderUnitNearbyPoint (point lp_point, fixed lp_range);
bool libPEB1_gf_ValidOrderUnitNearbyUnitGroup (unitgroup lp_unitGroup, fixed lp_range);
unitgroup libPEB1_gf_HeroicOrderUnitsinRegion (region lp_region);
region libPEB1_gf_NearestSpawnLocation (point lp_point);
unit libPEB1_gf_GetScourgeMissileTarget (point lp_location);
void libPEB1_gf_CreateScourgeNest ();
void libPEB1_gf_CreateScourgeMissile ();
void libPEB1_gf_DestroyAllSourgeNests ();
void libPEB1_gf_ScourgeMissileCameraShake (point lp_targetLocation);
void libPEB1_gf_PrepareArchangelArea (int lp_areaIndex);
void libPEB1_gf_SetArchangelPingText (int lp_areaIndex);
void libPEB1_gf_SpawnArchangelforArea (int lp_areaIndex, int lp_level);
void libPEB1_gf_SpawnDefenseHeroforArchangelArea (int lp_archangelArea, string lp_defenseHeroType);
void libPEB1_gf_ArchangelSpawnBaseDropship (point lp_position);
void libPEB1_gf_SpawnToxicSludglings (int lp_archangelArea, int lp_side);
void libPEB1_gf_SpawnVileTumor (int lp_areaIndex);
void libPEB1_gf_CastBileLauncher (int lp_areaIndex);
void libPEB1_gf_ArchangelFroggerRoutine (int lp_areaIndex);
void libPEB1_gf_ArchangelChaserBanelingLogic (unit lp_baneling, int lp_areaIndex);
void libPEB1_gf_IncludeHeroIntheNextAttackWave (int lp_lane1Count, int lp_lane2Count);
void libPEB1_gf_AddMarineRescueEvent (point lp_marineLocation1, point lp_marineLocation2, point lp_marineLocation3, region lp_zergSpawnRegion, region lp_revealRegion, region lp_rescueRegion);
void libPEB1_gf_MarineRescueEventCreateAll ();
void libPEB1_gf_MarineRescueEventCreateSingle (int lp_index);
void libPEB1_gf_MarineRescueEventReveal (int lp_index);
void libPEB1_gf_MarineRescueEventDoHarassment (int lp_index);
void libPEB1_gf_MarineRescueEventRescue (int lp_index);
void libPEB1_gf_MarineRescueEventMedivac (int lp_index);
void libPEB1_gf_MarineRescueUnburrowZerg (string lp_unitType, point lp_position, bool lp_aIOnOff);
void libPEB1_gf_SpawnCreepCamp (int lp_campIndex);
void libPEB1_gf_ToggleCreepCampStatus (int lp_campIndex, bool lp_status);
void libPEB1_gf_ShowRespawnTextTagforCreepCamp (int lp_campIndex);
void libPEB1_gf_SpawnRandomPickup (point lp_pos);
void libPEB1_gf_Victory (region lp_cameraRevealRegion, point lp_cameraTarget);
void libPEB1_gf_Defeat ();
void libPEB1_gf_ZergHeroSlainQ (string lp_killedUnitType);
void libPEB1_gf_HoldoutPanelInit ();
void libPEB1_gf_DisplayObjectivePanel (text lp_text1, text lp_countText, text lp_text2, timer lp_timerPanelTimer);
void libPEB1_gf_SetObjectivePanelTimerText1 (text lp_timer);
void libPEB1_gf_SetObjectivePanelTimerText2 (text lp_timer);
void libPEB1_gf_SetObjectivePanelComplete (text lp_text);
void libPEB1_gf_ShowMissionCompletePanel (text lp_text);
void libPEB1_gf_ShowHideObjectivePanel (bool lp_showHide);
void libPEB1_gf_DisplayHoldoutPanel (text lp_text, timer lp_timerPanelTimer);
void libPEB1_gf_SetHoldoutPanelTimerText (text lp_text);
void libPEB1_gf_SetHoldoutPanelComplete ();
void libPEB1_gf_ShowHideHoldoutPanel (bool lp_showHide);
void libPEB1_gf_BaseHealthBarInit ();
void libPEB1_gf_BaseHealthBarShrinkDelay (int lp_bar, int lp_newWidth, int lp_height);
void libPEB1_gf_BaseHealthBarFlashLabel (int lp_label);
fixed libPEB1_gf_UnitGroupTotalHealth (unitgroup lp_unitGroup, bool lp_current);
void libPEB1_gf_ChangeZergMinionAIToAutoSeekEnemy (unit lp_zergMinion);
void libPEB1_gf_ReinitializeHero (int lp_player, int lp_team);

// Trigger Declarations
trigger libPEB1_gt_IncludeMMDeadmansHoldout;
trigger libPEB1_gt_DeadmansHoldoutInit;
trigger libPEB1_gt_InitDifficultyHooks;
trigger libPEB1_gt_DeadmansStandCurateHeroListCallback;
trigger libPEB1_gt_PVEMinionWaveCompositionData;
trigger libPEB1_gt_PVEMinionWaveDestroyThinkTree;
trigger libPEB1_gt_PVEMinionWaveCreateThinkTree;
trigger libPEB1_gt_PVEMinionWaveSpawnCycle;
trigger libPEB1_gt_DeadmansHoldoutStartingSequence;
trigger libPEB1_gt_ZergStartup;
trigger libPEB1_gt_Stage1Music;
trigger libPEB1_gt_RemoveCivilianRunner;
trigger libPEB1_gt_InitPlayers;
trigger libPEB1_gt_BunkerDestroyed;
trigger libPEB1_gt_PlanetaryFortressDestroyed;
trigger libPEB1_gt_ExplorationRegions;
trigger libPEB1_gt_ZergMinionCatalogChanges;
trigger libPEB1_gt_AbathurInit;
trigger libPEB1_gt_MonstrosityStacks;
trigger libPEB1_gt_ToxicNestDamageBehavior;
trigger libPEB1_gt_MurkyEggTimerExpires;
trigger libPEB1_gt_MurkyEggDies;
trigger libPEB1_gt_MurkyAI;
trigger libPEB1_gt_MurkyFinalHoldoutAI;
trigger libPEB1_gt_MurkyRevive;
trigger libPEB1_gt_ZagaraAI;
trigger libPEB1_gt_ZagaraHunterKillerTransfusion;
trigger libPEB1_gt_AbathurTalents;
trigger libPEB1_gt_ZagaraTalents;
trigger libPEB1_gt_InitZergHeroes;
trigger libPEB1_gt_ZergHeroCatalogChangesCallback;
trigger libPEB1_gt_ZergHeroSpawned;
trigger libPEB1_gt_ZergHeroDies;
trigger libPEB1_gt_ZergWavesBasic;
trigger libPEB1_gt_CreateZergCamps;
trigger libPEB1_gt_HatcheryDefense;
trigger libPEB1_gt_ScourgeMissileCreated;
trigger libPEB1_gt_ArchangelSpawn1;
trigger libPEB1_gt_ArchangelSpawn2;
trigger libPEB1_gt_ArchangelDies;
trigger libPEB1_gt_ArchangelManageAdds;
trigger libPEB1_gt_ArchangelBaseDropshipUsed;
trigger libPEB1_gt_ArchangelBalanceInit;
trigger libPEB1_gt_ArchangelAggroed;
trigger libPEB1_gt_ArchangelDeaggroed;
trigger libPEB1_gt_ArchangelAnnihilateTurningControls;
trigger libPEB1_gt_Holdout1;
trigger libPEB1_gt_Holdout1AttackWaves;
trigger libPEB1_gt_Holdout1Wave1;
trigger libPEB1_gt_Holdout1Wave2;
trigger libPEB1_gt_Holdout1Wave3;
trigger libPEB1_gt_Holdout2;
trigger libPEB1_gt_Holdout2AttackWaves;
trigger libPEB1_gt_Holdout2Wave1;
trigger libPEB1_gt_Holdout2Wave2;
trigger libPEB1_gt_Holdout2Wave3;
trigger libPEB1_gt_Holdout3;
trigger libPEB1_gt_Holdout3AttackWaves;
trigger libPEB1_gt_Holdout3Wave1;
trigger libPEB1_gt_Holdout3Wave2;
trigger libPEB1_gt_Holdout3Wave3;
trigger libPEB1_gt_Holdout3SideWaves;
trigger libPEB1_gt_Holdout3CreepTumors;
trigger libPEB1_gt_VictoryFinalHoldoutComplete;
trigger libPEB1_gt_ArchangelEvent1Q;
trigger libPEB1_gt_Archangel1Killed;
trigger libPEB1_gt_ArchangelEvent2;
trigger libPEB1_gt_Archangel2Killed;
trigger libPEB1_gt_SpawnInitialCreepCamps;
trigger libPEB1_gt_UpdateCreepCampScaling;
trigger libPEB1_gt_CreepCampActivation;
trigger libPEB1_gt_RespawnCreepCamp;
trigger libPEB1_gt_InitPickups;
trigger libPEB1_gt_InitAdjustCaptureMacGuffin;
trigger libPEB1_gt_SpawnRegenerationGlobe;
trigger libPEB1_gt_EFBPlayVOSoundforPlayer;
trigger libPEB1_gt_ReinforcementsUsed;
trigger libPEB1_gt_ItemUsed;
trigger libPEB1_gt_PvEResurrectSecondChance;
trigger libPEB1_gt_VictorySequenceQ;
trigger libPEB1_gt_VictoryCinematic;
trigger libPEB1_gt_DefeatCoreDies;
trigger libPEB1_gt_DefeatHeroesKilled;
trigger libPEB1_gt_GameOverScoreTransmission;
trigger libPEB1_gt_GameOverScreenCallback;
trigger libPEB1_gt_IntroTransmissionQ;
trigger libPEB1_gt_GateOpensin10Q;
trigger libPEB1_gt_BattleBeginsQ;
trigger libPEB1_gt_CreepCampsQ;
trigger libPEB1_gt_CreepCampActivatedQ;
trigger libPEB1_gt_BunkersFallQ;
trigger libPEB1_gt_PlanetaryFortressDestroyedQ;
trigger libPEB1_gt_Holdout1AlmostDoneQ;
trigger libPEB1_gt_Archangel11;
trigger libPEB1_gt_Archangel12;
trigger libPEB1_gt_Archangel1ClosetoLaunchQ;
trigger libPEB1_gt_Holdout2Q;
trigger libPEB1_gt_Holdout2AlmostDoneQ;
trigger libPEB1_gt_Archangel2Q;
trigger libPEB1_gt_Archangel2ClosetoLaunchQ;
trigger libPEB1_gt_Holdout3Q;
trigger libPEB1_gt_Holdout3AlmostCompleteQ;
trigger libPEB1_gt_PlayerRevivedTransmission;
trigger libPEB1_gt_ScoreScreenDisplay;
trigger libPEB1_gt_ScoreScreenHide;
trigger libPEB1_gt_ScoreScreenLeave;
trigger libPEB1_gt_TabScreenInit;
trigger libPEB1_gt_TabScreenUpdate;
trigger libPEB1_gt_BaseHealthBarUpdate;
trigger libPEB1_gt_InitZergAI;
trigger libPEB1_gt_SetHeroRallyPoints;
trigger libPEB1_gt_PlayerRevivedAddEscortGoal;
trigger libPEB1_gt_EndofGameMessages;
trigger libPEB1_gt_DEBUGCamps;
trigger libPEB1_gt_DEBUGArchangel;
trigger libPEB1_gt_DEBUGArchangelDropship;
trigger libPEB1_gt_DEBUGStopTimers;
trigger libPEB1_gt_DEBUGDestroyAIThinkTree;
trigger libPEB1_gt_DEBUGStopBasicZergWaves;
trigger libPEB1_gt_DEBUGVictory;
trigger libPEB1_gt_DEBUGDefeat;
trigger libPEB1_gt_DEBUGSkipTransmission;
trigger libPEB1_gt_DEBUGArchangelBombardment;
trigger libPEB1_gt_DEBUGTemp;
trigger libPEB1_gt_DEBUGNoDefeatToggle;
trigger libPEB1_gt_DEBUGPerformanceArchangel;
trigger libPEB1_gt_DEBUGPerformanceHoldOut;
trigger libPEB1_gt_DEBUGplayernames;

// Library Initialization
void libPEB1_InitVariables ();

