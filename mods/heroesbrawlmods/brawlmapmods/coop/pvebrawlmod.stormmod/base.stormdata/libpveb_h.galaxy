include "TriggerLibs/HeroesLib"

//--------------------------------------------------------------------------------------------------
// Library: PvE Brawl Mod
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libPVEB_ge_PvEPickupPickupActivationType_Instant = 0;
const int libPVEB_ge_PvEPickupPickupActivationType_Target = 1;
const int libPVEB_ge_PVEDirectiveStyle_ObjectiveDiscovered = 0;
const int libPVEB_ge_PVEDirectiveStyle_ObjectiveFailed = 1;
const int libPVEB_ge_PVEDirectiveStyle_ObjectiveCompleted = 2;
const int libPVEB_ge_PVEDirectiveStyle_ObjectiveUpdated = 3;
const int libPVEB_ge_PVEDirectiveStyle_ObjectiveBegins = 4;
const int libPVEB_ge_PVEGameDifficulty_Normal = 0;
const int libPVEB_ge_PVEGameDifficulty_Hard = 1;

// Constants
const int libPVEB_gv_pvEPickupMaxPickupTypes_C = 10;
const int libPVEB_gv_pvEPickupMaxActivePickups_C = 10;
const fixed libPVEB_gv_pBNPCHeroResizeRatio = 1.25;
const int libPVEB_gv_pBNPCHero_MaxCount_C = 5;
const string libPVEB_gv_eventID_NPCHeroSpawn_C = "NPCHeroSpawn";
const string libPVEB_gv_eventParam_NPCHeroSpawn_Player_C = "Player";
const string libPVEB_gv_eventParam_NPCHeroSpawn_HeroUnit_C = "HeroUnit";
const int libPVEB_gv_pvERezzableDurationEasy_C = 0;
const int libPVEB_gv_pvEWaveWaypointCount_Max_C = 50;
const int libPVEB_gv_pvEWaveCount_Max_C = 50;
const fixed libPVEB_gv_pvEWaveLeashDistance_On_C = 10.0;
const fixed libPVEB_gv_pvEWaveLeashDistance_Off_C = 3.5;
const fixed libPVEB_gv_pvEWaveWaypointDistance_C = 9.0;

// Structures
struct libPVEB_gs_PvEBrawlSetting {
    bool lv_mountDisabled;
    bool lv_hearthDisabled;
};

struct libPVEB_gs_PBNPCHero {
    string lv_hero;
    string lv_unitType;
    int lv_player;
    string lv_skin;
    unit lv_heroUnit;
    string lv_radiusScaledHero;
};

struct libPVEB_gs_PVEResurrectRevivingDialog {
    int lv_panel;
    int lv_label;
};

struct libPVEB_gs_TutorialVeteranPanel {
    int lv_mainPanel;
    int lv_directiveTextFrame;
    int lv_directiveTitleLabel;
    int lv_directiveDescriptionLabel;
    int lv_mainPanelSmall;
    int lv_directiveTextFrameSmall;
    int lv_directiveTitleLabelSmall;
    int lv_directiveDescriptionLabelSmall;
};

struct libPVEB_gs_PBGameOverScreen {
    int lv_victoryLabel;
    int lv_victoryLabelGlow;
    int lv_defeatLabel;
    int lv_defeatLabelGlow;
    int lv_timeLabel;
    int lv_finalTimeLabel;
};

struct libPVEB_gs_PvEWave {
    bool lv_used;
    bool lv_sent;
    unitgroup lv_units;
    unitgroup lv_unitsWaitingAtWaypoint;
    unitgroup lv_unitsLeashing;
    point[libPVEB_gv_pvEWaveWaypointCount_Max_C + 1] lv_waypoints;
    int lv_wayPointCount;
    int lv_wayPointPre;
    int lv_wayPointNext;
};

// Variable Declarations
libPVEB_gs_PvEBrawlSetting libPVEB_gv_pvEBrawlSetting;
int libPVEB_gv_pBNPCHeroLevel;
unitfilter libPVEB_gv_filtersPvEEventHeroic;
string[libPVEB_gv_pvEPickupMaxPickupTypes_C + 1] libPVEB_gv_pvEPickupPickupsTotal;
int libPVEB_gv_pvEPickupPickupsTotalPickupsInitialized;
string[libPVEB_gv_pvEPickupMaxPickupTypes_C + 1] libPVEB_gv_pvEPickupPickupsInstant;
int libPVEB_gv_pvEPickupPickupsInstantPickupsInitialized;
string[libPVEB_gv_pvEPickupMaxPickupTypes_C + 1] libPVEB_gv_pvEPickupPickupsTarget;
int libPVEB_gv_pvEPickupPickupsTargetPickupsInitialized;
string[libPVEB_gv_pvEPickupMaxPickupTypes_C + 1] libPVEB_gv_pvEPickupPickupsCarryBehavior;
trigger libPVEB_gv_pvEPickupPreplacedPickupCallback;
bool libPVEB_gv_pvEPickupPlacingPreplacedPickups;
unitgroup libPVEB_gv_pvEPickupPreplacedPickups;
unitgroup libPVEB_gv_pvEPickupItemsOnGround;
string libPVEB_gv_pvEPickupLastPickupSpawned;
int libPVEB_gv_pvEPickupCurrentRotationStep;
int libPVEB_gv_pvEPickupRolloverRotationStep;
string[libCore_gv_bALMaxPlayers + 1] libPVEB_gv_pvEPickupHeldPickups;
trigger libPVEB_gv_pBHeroCatalogChangeCallback;
int libPVEB_gv_pBHeroCatalogChangePlayerIndex;
int libPVEB_gv_pBNPCHeroesCount;
libPVEB_gs_PBNPCHero[libPVEB_gv_pBNPCHero_MaxCount_C + 1] libPVEB_gv_pBNPCHeroes;
unitgroup libPVEB_gv_pBNPCHeroUnits;
unitgroup libPVEB_gv_pBNPCMinions;
int libPVEB_gv_pBNPCMinionZerglingIndex;
int libPVEB_gv_pvEResurrectActiveSpirits;
int[libCore_gv_bALMaxPlayersOnATeam + 1] libPVEB_gv_pvEResurrectTimes;
unit[libCore_gv_bALMaxPlayers + 1] libPVEB_gv_pvEResurrectSpirit;
int[libCore_gv_bALMaxPlayers + 1] libPVEB_gv_pvEResurrectSpiritTextTag;
int[libCore_gv_bALMaxPlayers + 1] libPVEB_gv_pvEResurrectSpiritTextTagSelf;
timer[libCore_gv_bALMaxPlayers + 1] libPVEB_gv_pvEResurrectNotifyTargetPlayerReviveInterruptedTimer;
unitgroup[libCore_gv_bALMaxPlayers + 1] libPVEB_gv_pvEResurrectResurrectionCastersUnitGroup;
libPVEB_gs_PVEResurrectRevivingDialog[libCore_gv_bALMaxPlayers + 1] libPVEB_gv_pvEResurrectRevivingDialog;
libPVEB_gs_TutorialVeteranPanel libPVEB_gv_tutorialVeteranPanel;
int libPVEB_gv_pB_GameDifficulty;
int libPVEB_gv_gameOverResult;
libPVEB_gs_PBGameOverScreen libPVEB_gv_pBGameOverScreen;
trigger libPVEB_gv_pBGameOverScreenCallback;
fixed libPVEB_gv_pBGameOverPlayerXPGain;
int libPVEB_gv_pvEWaveCount;
bool libPVEB_gv_pvEWavePaused;
libPVEB_gs_PvEWave[libPVEB_gv_pvEWaveCount_Max_C + 1] libPVEB_gv_pvEWaves;

// Function Declarations
void libPVEB_gf_PBUpdateTeamLevel (int lp_teamIndex, int lp_newLevel);
bool libPVEB_gf_PlayerHeroNearby (point lp_location);
void libPVEB_gf_AwardXPForNPCKill (unit lp_killedUnit, int lp_killedUnitPlayer, int lp_killedUnitClassification, int lp_killingPlayer, fixed lp_killedUnitXPAward);
void libPVEB_gf_PvEPickupInitializePickup (int lp_activation, string lp_pickup, string lp_carryBehavior);
void libPVEB_gf_PvEPickupSpawnPickup (string lp_type, point lp_position, bool lp_droppedItem);
void libPVEB_gf_PvEPickupSpawnRandom (point lp_position);
void libPVEB_gf_PvEPickupSpawnRandomInRotation (string lp_specialSpawn, point lp_position);
void libPVEB_gf_PvEPickupSwapPickup (unit lp_caster, point lp_targetLocation, string lp_abilityBehavior);
void libPVEB_gf_PvEPickupStoreHeldPickups ();
void libPVEB_gf_PvEPickupRestoreHeldPickups ();
void libPVEB_gf_PvEPickupDespawnPickupsInRegion (region lp_region);
void libPVEB_gf_RemoveTalent (string lp_talent);
playergroup libPVEB_gf_PBPlayersOnHumanTeam ();
playergroup libPVEB_gf_PBPlayersOnComputerTeam ();
bool libPVEB_gf_PBIsValidHumanTeamPlayer (int lp_player);
bool libPVEB_gf_PBIsValidHumanPlayer (int lp_player);
bool libPVEB_gf_PBPlayerHeroIsDead (int lp_player);
void libPVEB_gf_PBSetNPCHeroStats (string lp_hero, int lp_player, fixed lp_health);
void libPVEB_gf_PBSpawnNPCHero (string lp_hero, point lp_spawnLocation, int lp_level);
void libPVEB_gf_PBSpawnNPCHeroWithXP (string lp_hero, point lp_spawnLocation, fixed lp_xP);
void libPVEB_gf_PBPrepareNPCHero (string lp_hero, string lp_skin);
void libPVEB_gf_PBResetNPCHero (string lp_hero);
int libPVEB_gf_PBNPCHeroPlayerFromUnitType (string lp_unitType);
unit libPVEB_gf_PBNPCHeroUnit (string lp_hero);
string libPVEB_gf_PBNPCHeroFromUnitType (string lp_heroUnitType);
string libPVEB_gf_PBNPCHeroUnitType (string lp_hero);
int libPVEB_gf_PBNPCHeroIndexFromPlayer (int lp_player);
int libPVEB_gf_PBNPCHeroIndexFromUnitType (string lp_heroUnitType);
int libPVEB_gf_PBNPCHeroIndex (string lp_hero);
void libPVEB_gf_PVENPCHeroSpawned (trigger t);
void libPVEB_gf_SendEventNPCHeroSpawned (int lp_player, unit lp_heroUnit);
int libPVEB_gf_NPCHeroSpawnedPlayer ();
unit libPVEB_gf_NPCHeroSpawnedUnit ();
void libPVEB_gf_PBSpawnNPCMinions (string lp_type, int lp_player, point lp_pos, fixed lp_angle, int lp_flags);
void libPVEB_gf_PvEResurrectCheckActiveSpirits (bool lp_targetHeroDead);
void libPVEB_gf_PvEResurrectAddRemoveDeadHeroArrow (bool lp_addorRemove, int lp_player);
void libPVEB_gf_PvEResurrectRevivePlayerInstantly (int lp_playerIndex, point lp_location);
void libPVEB_gf_PvEResurrectRevivePlayerCleanup (int lp_player);
void libPVEB_gf_PVECreateDirectiveMessage (text lp_title, text lp_description, int lp_style);
void libPVEB_gf_PVEDestroyCurrentDirectiveMessage ();
void libPVEB_gf_PVECreateDirectiveMessageSmall (text lp_title, text lp_description, int lp_style);
void libPVEB_gf_PVEDestroyCurrentDirectiveMessageSmall ();
int libPVEB_gf_PBGameDifficulty ();
int libPVEB_gf_PVEDifficultyValueInt (int lp_normal, int lp_hard);
fixed libPVEB_gf_PVEDifficultyValueReal (fixed lp_normal, fixed lp_hard);
void libPVEB_gf_PBVictoryDefeatEffect (bool lp_victory);
void libPVEB_gf_PBVictoryDefeat (bool lp_victory, region lp_victoryArea, point lp_victoryLocation);
void libPVEB_gf_PBEndGameForPlayer (int lp_player);
void libPVEB_gf_PBDisplayGameOverSplash (bool lp_victory);
void libPVEB_gf_DebugSelectPlayerHero (int lp_player, int lp_playerToSelect, bool lp_exclude);
void libPVEB_gf_PvEWaveRoutineSingleWave (int lp_waveIndex);
bool libPVEB_gf_PvEIsValidWaveIndex (int lp_index);
void libPVEB_gf_PvEAddUnitToAttackWave (int lp_waveIndex, unit lp_unit);
void libPVEB_gf_PvEAddUnitGroupToAttackWave (int lp_waveIndex, unitgroup lp_units);
void libPVEB_gf_PvEAddAttackWaveWaypoint (int lp_waveIndex, point lp_waypoint);
void libPVEB_gf_PvECreateAttackWave ();
int libPVEB_gf_PvELastCreatedAttackWave ();
void libPVEB_gf_PvESendAttackWave (int lp_waveIndex);
bool libPVEB_gf_MinionAITestPastNextWaypoint (point lp_minionIndex, point lp_minionIndex2, point lp_minionIndex3);
void libPVEB_gf_PvECreateDefenderAI (unitgroup lp_defenders, region lp_defendRegion, region lp_leashRegion, bool lp_healOnLeash);

// Trigger Declarations
trigger libPVEB_gt_IncludeMMPvEBrawlMod;
trigger libPVEB_gt_PBHeroSpawned;
trigger libPVEB_gt_InitializeArrows;
trigger libPVEB_gt_InitializePossibleAIPlayers;
trigger libPVEB_gt_InitPVEBrawlMod;
trigger libPVEB_gt_PvEPickupPingOverrides;
trigger libPVEB_gt_PvEPickupPreplacedPickupVisibilityCheck;
trigger libPVEB_gt_PvEPickupItemPickedUp;
trigger libPVEB_gt_PBNPCMinionDies;
trigger libPVEB_gt_PvEResurrectCreateSpirit;
trigger libPVEB_gt_PvEResurrectPlayerRespawnsNormally;
trigger libPVEB_gt_PvEResurrectRevivePlayer;
trigger libPVEB_gt_PvEResurrectNotifyTargetPlayerReviveStart;
trigger libPVEB_gt_PvEResurrectNotifyTargetPlayerReviveInterrupted;
trigger libPVEB_gt_PvEResurrectNotifyTargetPlayerReviveInterruptedTimerExpired;
trigger libPVEB_gt_PVEDirectivePanelInitialize;
trigger libPVEB_gt_PVEDisplayDirectivePanelMessage;
trigger libPVEB_gt_PVEDisplayDirectivePanelMessageSmall;
trigger libPVEB_gt_DebugBehaviorDurationCheck;
trigger libPVEB_gt_DebugVictory;
trigger libPVEB_gt_DebugDefeat;
trigger libPVEB_gt_DebugDifficulty;
trigger libPVEB_gt_DebugInitializeArrows;
trigger libPVEB_gt_DebugShowArrows;
trigger libPVEB_gt_DebugHideArrows;
trigger libPVEB_gt_DebugTurnOnPlayerSelction;
trigger libPVEB_gt_DebugPlayerSelection;
trigger libPVEB_gt_DebugDirectiveText;
trigger libPVEB_gt_DebugSpawnPickupAll;
trigger libPVEB_gt_DebugSpawnPickupRandom;
trigger libPVEB_gt_DebugSpawnPickupRotation;
trigger libPVEB_gt_PvEWaveRoutine;

// Library Initialization
void libPVEB_InitVariables ();

