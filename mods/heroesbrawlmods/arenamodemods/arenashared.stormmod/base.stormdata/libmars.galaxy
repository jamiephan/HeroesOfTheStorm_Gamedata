include "TriggerLibs/NativeLib"
include "TriggerLibs/HeroesLib"
include "TriggerLibs/GameLib"

include "LibMArS_h"

//--------------------------------------------------------------------------------------------------
// Library: MArS
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libMArS_InitLibraries () {
    libNtve_InitVariables();
    libCore_InitVariables();
    libGame_InitVariables();
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Monk Trait Selection
//--------------------------------------------------------------------------------------------------
bool libMArS_gt_MonkTraitSelection_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_arenaHero;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((libCore_gv_sYSGameMode == libCore_ge_GameModes_ArenaMode) || (libCore_gv_sYSGameMode == libCore_ge_GameModes_AttackDefend)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_arenaHero = EventUnit();
    if ((UnitGetType(lv_arenaHero) == "HeroMonk")) {
        if ((UnitHasBehavior2(lv_arenaHero, "Ultimate1Unlocked") == true)) {
            PlayerAddTalent(UnitGetOwner(lv_arenaHero), "MonkIronFists");
            UnitBehaviorAdd(lv_arenaHero, "MonkIronFistsCarryBehavior", lv_arenaHero, 1);
        }
        else {
            PlayerAddTalent(UnitGetOwner(lv_arenaHero), "MonkTranscendence");
            UnitBehaviorAdd(lv_arenaHero, "MonkTranscendenceCarryBehavior", lv_arenaHero, 1);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libMArS_gt_MonkTraitSelection_Init () {
    libMArS_gt_MonkTraitSelection = TriggerCreate("libMArS_gt_MonkTraitSelection_Func");
    TriggerAddEventUnitBehaviorChange(libMArS_gt_MonkTraitSelection, null, "Ultimate1Unlocked", c_unitBehaviorChangeCreate);
    TriggerAddEventUnitBehaviorChange(libMArS_gt_MonkTraitSelection, null, "Ultimate2Unlocked", c_unitBehaviorChangeCreate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ragnaros Heroic Selection
//--------------------------------------------------------------------------------------------------
bool libMArS_gt_RagnarosHeroicSelection_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_arenaHero;

    // Variable Initialization
    lv_arenaHero = libGame_gv_players[libGame_gf_HeroSpawnPlayer()].lv_heroUnit;

    // Conditions
    if (testConds) {
        if (!(((libCore_gv_sYSGameMode == libCore_ge_GameModes_ArenaMode) || (libCore_gv_sYSGameMode == libCore_ge_GameModes_AttackDefend)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(lv_arenaHero) == UnitTypeFromString("HeroRagnaros"))) {
        SetTalentEnabled(("RagnarosLavaWave"), false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libMArS_gt_RagnarosHeroicSelection_Init () {
    libMArS_gt_RagnarosHeroicSelection = TriggerCreate("libMArS_gt_RagnarosHeroicSelection_Func");
    libGame_gf_HeroSpawn(libMArS_gt_RagnarosHeroicSelection);
}

void libMArS_InitTriggers () {
    libMArS_gt_MonkTraitSelection_Init();
    libMArS_gt_RagnarosHeroicSelection_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libMArS_InitLib_completed = false;

void libMArS_InitLib () {
    if (libMArS_InitLib_completed) {
        return;
    }

    libMArS_InitLib_completed = true;

    libMArS_InitLibraries();
    libMArS_InitTriggers();
}

