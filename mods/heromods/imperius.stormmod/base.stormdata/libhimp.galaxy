include "TriggerLibs/NativeLib"
include "TriggerLibs/GameLib"
include "TriggerLibs/AILib"
include "TriggerLibs/UILib"

include "LibHIMP_h"

//--------------------------------------------------------------------------------------------------
// Library: Imperius
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libHIMP_InitLibraries () {
    libNtve_InitVariables();
    libGame_InitVariables();
    libAIAI_InitVariables();
    libUIUI_InitVariables();
}

// Variable Initialization
bool libHIMP_InitVariables_completed = false;

void libHIMP_InitVariables () {
    if (libHIMP_InitVariables_completed) {
        return;
    }

    libHIMP_InitVariables_completed = true;

}

// Functions
void libHIMP_gf_HeroImperiusIncrementHeroCountFunction () {
    // Automatic Variable Declarations
    // Implementation
    libHIMP_gv_heroImperiusTriggerRegistrationVariable += 1;
    if ((libHIMP_gv_heroImperiusTriggerRegistrationVariable == 1)) {
        TriggerEnable(libHIMP_gt_HeroImperiusCelestialChargeTargetUnitAlignment, true);
        TriggerEnable(libHIMP_gt_HeroImperiusCelestialChargeTimeStopHandler, true);
        TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayShow, true);
        TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayHide, true);
        TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisAIControl, true);
        TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisImperiusTeleport, true);
        TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisTargetTeleport, true);
    }

}

void libHIMP_gf_HeroImperiusDecrementHeroCountFunction () {
    // Automatic Variable Declarations
    // Implementation
    libHIMP_gv_heroImperiusTriggerRegistrationVariable -= 1;
    if ((libHIMP_gv_heroImperiusTriggerRegistrationVariable < 0)) {
        libHIMP_gv_heroImperiusTriggerRegistrationVariable = 0;
    }

    if ((libHIMP_gv_heroImperiusTriggerRegistrationVariable == 0)) {
        TriggerEnable(libHIMP_gt_HeroImperiusCelestialChargeTargetUnitAlignment, false);
        TriggerEnable(libHIMP_gt_HeroImperiusCelestialChargeTimeStopHandler, false);
        TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayShow, false);
        TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayHide, false);
        TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisAIControl, false);
        TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisImperiusTeleport, false);
        TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisTargetTeleport, false);
    }

}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Hero - Imperius - Celestial Charge - Target Unit Alignment
//--------------------------------------------------------------------------------------------------
bool libHIMP_gt_HeroImperiusCelestialChargeTargetUnitAlignment_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_imperiusUnit;
    fixed lv_imperiusUnitFacing;
    fixed lv_imperiusUnitFacing360;
    point lv_imperiusUnitPoint;
    unit lv_targetUnit;
    point lv_targetUnitPoint;
    fixed lv_iTDistance;
    fixed lv_relativeAngle;
    fixed lv_relativeAngle360;
    fixed lv_iTAngle;
    fixed lv_iADistance;
    fixed lv_minSkewerDistance;
    fixed lv_maxSkewerDistance;
    point lv_alignmentPoint;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_imperiusUnit = EventPlayerEffectUsedUnit(c_effectUnitCaster);
    lv_imperiusUnitFacing = UnitGetFacing(lv_imperiusUnit);
    lv_imperiusUnitPoint = UnitGetPosition(lv_imperiusUnit);
    lv_targetUnit = EventPlayerEffectUsedUnit(c_effectUnitTarget);
    lv_targetUnitPoint = UnitGetPosition(lv_targetUnit);

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(lv_targetUnit) == true))) {
            return false;
        }

        if (!((UnitHasBehavior2(lv_targetUnit, "ImperiusCelestialChargeChannelStunDebuff") == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_minSkewerDistance = 1.5;
    lv_maxSkewerDistance = 4.5;
    lv_iTDistance = DistanceBetweenPoints(lv_imperiusUnitPoint, lv_targetUnitPoint);
    lv_relativeAngle = AngleBetweenPoints(lv_imperiusUnitPoint, lv_targetUnitPoint);
    if ((lv_imperiusUnitFacing >= 0.0)) {
        lv_imperiusUnitFacing360 = lv_imperiusUnitFacing;
    }
    else {
        lv_imperiusUnitFacing360 = (lv_imperiusUnitFacing + 360.0);
    }
    if ((lv_relativeAngle >= 0.0)) {
        lv_relativeAngle360 = lv_relativeAngle;
    }
    else {
        lv_relativeAngle360 = (lv_relativeAngle + 360.0);
    }
    lv_iTAngle = MinF(AbsF((lv_imperiusUnitFacing360 - lv_relativeAngle360)), AbsF(((lv_imperiusUnitFacing360 + lv_relativeAngle360) - 360.0)));
    lv_iADistance = (Cos(lv_iTAngle) * lv_iTDistance);
    if (((lv_iADistance >= lv_minSkewerDistance) && (lv_iADistance <= lv_maxSkewerDistance))) {
        lv_alignmentPoint = PointWithOffsetPolar(lv_imperiusUnitPoint, lv_iADistance, lv_imperiusUnitFacing);
    }
    else {
        if ((lv_iADistance > lv_maxSkewerDistance)) {
            lv_alignmentPoint = PointWithOffsetPolar(lv_imperiusUnitPoint, lv_maxSkewerDistance, lv_imperiusUnitFacing);
        }
        else {
            lv_alignmentPoint = PointWithOffsetPolar(lv_imperiusUnitPoint, lv_minSkewerDistance, lv_imperiusUnitFacing);
        }
    }
    UnitCreateEffectPoint(lv_targetUnit, "ImperiusCelestialChargeAlignmentLaunchMissile", lv_alignmentPoint);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libHIMP_gt_HeroImperiusCelestialChargeTargetUnitAlignment_Init () {
    libHIMP_gt_HeroImperiusCelestialChargeTargetUnitAlignment = TriggerCreate("libHIMP_gt_HeroImperiusCelestialChargeTargetUnitAlignment_Func");
    TriggerEnable(libHIMP_gt_HeroImperiusCelestialChargeTargetUnitAlignment, false);
    TriggerAddEventPlayerEffectUsed(libHIMP_gt_HeroImperiusCelestialChargeTargetUnitAlignment, c_playerAny, "ImperiusCelestialChargeChannelStunDebuffApplyBehavior");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hero - Imperius - Celestial Charge - Time Stop Handler
//--------------------------------------------------------------------------------------------------
bool libHIMP_gt_HeroImperiusCelestialChargeTimeStopHandler_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_targetUnit;
    unit lv_imperiusUnit;

    // Automatic Variable Declarations
    unitgroup autoB6DFFF06_g;
    int autoB6DFFF06_u;

    // Variable Initialization
    lv_targetUnit = EventUnit();

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(lv_targetUnit) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitHasBehavior2(lv_targetUnit, "ImperiusCelestialChargeCasterChannelBuff") == true)) {
        lv_imperiusUnit = lv_targetUnit;
        autoB6DFFF06_g = UnitGetTrackedUnitGroup(lv_imperiusUnit, "ImperiusCelestialChargeUnitTracker");
        autoB6DFFF06_u = UnitGroupCount(autoB6DFFF06_g, c_unitCountAll);
        for (;; autoB6DFFF06_u -= 1) {
            lv_targetUnit = UnitGroupUnitFromEnd(autoB6DFFF06_g, autoB6DFFF06_u);
            if (lv_targetUnit == null) { break; }
            if ((((UnitHasBehaviorWithCategoryFlag(lv_targetUnit, c_behaviorCategoryTimeStop) == true) && (UnitHasBehaviorWithCategoryFlag(lv_imperiusUnit, c_behaviorCategoryTimeStop) == false)) || ((UnitHasBehaviorWithCategoryFlag(lv_targetUnit, c_behaviorCategoryTimeStop) == false) && (UnitHasBehaviorWithCategoryFlag(lv_imperiusUnit, c_behaviorCategoryTimeStop) == true)))) {
                UnitBehaviorRemove(lv_targetUnit, "ImperiusCelestialChargeChannelStunDebuff", c_unitBehaviorCountAll);
            }

        }
    }

    if ((UnitHasBehavior2(lv_targetUnit, "ImperiusCelestialChargeChannelStunDebuff") == true)) {
        lv_imperiusUnit = UnitBehaviorEffectUnit(lv_targetUnit, "ImperiusCelestialChargeChannelStunDebuff", c_effectUnitCaster, 0);
        if ((((UnitHasBehaviorWithCategoryFlag(lv_targetUnit, c_behaviorCategoryTimeStop) == true) && (UnitHasBehaviorWithCategoryFlag(lv_imperiusUnit, c_behaviorCategoryTimeStop) == false)) || ((UnitHasBehaviorWithCategoryFlag(lv_targetUnit, c_behaviorCategoryTimeStop) == false) && (UnitHasBehaviorWithCategoryFlag(lv_imperiusUnit, c_behaviorCategoryTimeStop) == true)))) {
            UnitBehaviorRemove(lv_targetUnit, "ImperiusCelestialChargeChannelStunDebuff", c_unitBehaviorCountAll);
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libHIMP_gt_HeroImperiusCelestialChargeTimeStopHandler_Init () {
    libHIMP_gt_HeroImperiusCelestialChargeTimeStopHandler = TriggerCreate("libHIMP_gt_HeroImperiusCelestialChargeTimeStopHandler_Func");
    TriggerEnable(libHIMP_gt_HeroImperiusCelestialChargeTimeStopHandler, false);
    TriggerAddEventUnitBehaviorChangeFromCategory(libHIMP_gt_HeroImperiusCelestialChargeTimeStopHandler, null, c_behaviorCategoryTimeStop, c_unitBehaviorChangeCreate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hero - Imperius - Wrath Of The Angiris - Overlay Show
//--------------------------------------------------------------------------------------------------
bool libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayShow_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_wrathOfTheAngirisUnit;
    int lv_wrathOfTheAngirisPlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_wrathOfTheAngirisUnit = EventUnit();
    lv_wrathOfTheAngirisPlayer = UnitGetOwner(lv_wrathOfTheAngirisUnit);

    // Conditions
    if (testConds) {
        if (!((UnitHasBehavior2(lv_wrathOfTheAngirisUnit, "HeroGenericIgnoreFullscreenOverlay") == false))) {
            return false;
        }

        if (!((lv_wrathOfTheAngirisUnit == libGame_gv_players[lv_wrathOfTheAngirisPlayer].lv_heroUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libUIUI_gf_FullscreenOverlayAddItemForPlayer(lv_wrathOfTheAngirisPlayer, libUIUI_ge_FullscreenOverlayPriorities_Stasis, "Cutscenes\\GameUI_ImperiusOverlay.StormCutscene", EventUnitBehavior());
    return true;
}

//--------------------------------------------------------------------------------------------------
void libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayShow_Init () {
    libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayShow = TriggerCreate("libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayShow_Func");
    TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayShow, false);
    TriggerAddEventUnitBehaviorChange(libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayShow, null, "ImperiusWrathOfTheAngirisTargetRemovedStasis", c_unitBehaviorChangeActivate);
    TriggerAddEventUnitBehaviorChange(libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayShow, null, "ImperiusWrathOfTheAngirisCasterRemovedStasis", c_unitBehaviorChangeActivate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hero - Imperius - Wrath Of The Angiris - Overlay Hide
//--------------------------------------------------------------------------------------------------
bool libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayHide_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_wrathOfTheAngirisUnit;
    int lv_wrathOfTheAngirisPlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_wrathOfTheAngirisUnit = EventUnit();
    lv_wrathOfTheAngirisPlayer = UnitGetOwner(lv_wrathOfTheAngirisUnit);

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.125, c_timeGame);
    libUIUI_gf_FullscreenOverlayRemoveItemFromQueueForPlayer(lv_wrathOfTheAngirisPlayer, "Cutscenes\\GameUI_ImperiusOverlay.StormCutscene", EventUnitBehavior());
    return true;
}

//--------------------------------------------------------------------------------------------------
void libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayHide_Init () {
    libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayHide = TriggerCreate("libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayHide_Func");
    TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayHide, false);
    TriggerAddEventUnitBehaviorChange(libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayHide, null, "ImperiusWrathOfTheAngirisTargetRemovedStasis", c_unitBehaviorChangeDeactivate);
    TriggerAddEventUnitBehaviorChange(libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayHide, null, "ImperiusWrathOfTheAngirisCasterRemovedStasis", c_unitBehaviorChangeDeactivate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hero - Imperius - Wrath Of The Angiris - AI Control
//--------------------------------------------------------------------------------------------------
bool libHIMP_gt_HeroImperiusWrathOfTheAngirisAIControl_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_wrathOfTheAngirisCursorUnit;
    int lv_imperiusPlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_wrathOfTheAngirisCursorUnit = EventUnitCreatedUnit();
    lv_imperiusPlayer = UnitGetOwner(lv_wrathOfTheAngirisCursorUnit);

    // Conditions
    if (testConds) {
        if (!((libAIAI_gf_HeroAIIsAIEnabledForPlayer(lv_imperiusPlayer) == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnitCreatedUnit()) == "ImperiusWrathOfTheAngirisCursorUnit"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreateAIThinkTree(lv_wrathOfTheAngirisCursorUnit);
    while ((libAIAI_gf_HeroAIIsAIEnabledForPlayer(lv_imperiusPlayer) == true) && (UnitIsAlive(lv_wrathOfTheAngirisCursorUnit) == true)) {
        Wait(0.5, c_timeGame);
    }
    UnitDestroyAIThinkTree(lv_wrathOfTheAngirisCursorUnit);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libHIMP_gt_HeroImperiusWrathOfTheAngirisAIControl_Init () {
    libHIMP_gt_HeroImperiusWrathOfTheAngirisAIControl = TriggerCreate("libHIMP_gt_HeroImperiusWrathOfTheAngirisAIControl_Func");
    TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisAIControl, false);
    TriggerAddEventUnitCreated(libHIMP_gt_HeroImperiusWrathOfTheAngirisAIControl, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hero - Imperius - Wrath Of The Angiris - Imperius Teleport
//--------------------------------------------------------------------------------------------------
bool libHIMP_gt_HeroImperiusWrathOfTheAngirisImperiusTeleport_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_wrathOfTheAngirisCursorUnit;
    int lv_wrathOfTheAngirisImperiusPlayer;
    unit lv_wrathOfTheAngirisImperiusUnit;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_wrathOfTheAngirisCursorUnit = EventUnit();
    lv_wrathOfTheAngirisImperiusPlayer = UnitGetOwner(lv_wrathOfTheAngirisCursorUnit);
    lv_wrathOfTheAngirisImperiusUnit = libGame_gv_players[lv_wrathOfTheAngirisImperiusPlayer].lv_heroUnit;

    // Actions
    if (!runActions) {
        return true;
    }

    while ((UnitIsAlive(lv_wrathOfTheAngirisCursorUnit) == true) && (UnitHasBehavior2(lv_wrathOfTheAngirisImperiusUnit, "ImperiusWrathOfTheAngirisCasterRemovedStasis") == true)) {
        UnitSetPosition(lv_wrathOfTheAngirisImperiusUnit, UnitGetPosition(lv_wrathOfTheAngirisCursorUnit), true);
        Wait(0.0625, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libHIMP_gt_HeroImperiusWrathOfTheAngirisImperiusTeleport_Init () {
    libHIMP_gt_HeroImperiusWrathOfTheAngirisImperiusTeleport = TriggerCreate("libHIMP_gt_HeroImperiusWrathOfTheAngirisImperiusTeleport_Func");
    TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisImperiusTeleport, false);
    TriggerAddEventUnitBehaviorChange(libHIMP_gt_HeroImperiusWrathOfTheAngirisImperiusTeleport, null, "ImperiusWrathOfTheAngirisCursorUnitTimedLife", c_unitBehaviorChangeActivate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hero - Imperius - Wrath Of The Angiris - Target Teleport
//--------------------------------------------------------------------------------------------------
bool libHIMP_gt_HeroImperiusWrathOfTheAngirisTargetTeleport_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_wrathOfTheAngirisTargetUnit;
    int lv_wrathOfTheAngirisTargetPlayer;
    unit lv_wrathOfTheAngirisImperiusUnit;
    int lv_wrathOfTheAngirisImperiusPlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_wrathOfTheAngirisTargetUnit = EventUnit();
    lv_wrathOfTheAngirisTargetPlayer = UnitGetOwner(lv_wrathOfTheAngirisTargetUnit);
    lv_wrathOfTheAngirisImperiusUnit = UnitBehaviorEffectUnit(lv_wrathOfTheAngirisTargetUnit, "ImperiusWrathOfTheAngirisTargetRemovedStasis", c_effectUnitCaster, 0);
    lv_wrathOfTheAngirisImperiusPlayer = UnitGetOwner(lv_wrathOfTheAngirisImperiusUnit);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitHasBehavior2(lv_wrathOfTheAngirisTargetUnit, "ImperiusWrathOfTheAngirisTargetRemovedStasis") == true) && (lv_wrathOfTheAngirisTargetUnit == libGame_gv_players[lv_wrathOfTheAngirisTargetPlayer].lv_heroUnit)) {
        libGame_gf_PlayerHeroDisplacementCameraLock(lv_wrathOfTheAngirisTargetUnit, "ImperiusWrathOfTheAngirisTargetRemovedStasis");
    }

    while ((UnitHasBehavior2(lv_wrathOfTheAngirisTargetUnit, "ImperiusWrathOfTheAngirisTargetRemovedStasis") == true) && (UnitBehaviorDuration(lv_wrathOfTheAngirisTargetUnit, "ImperiusWrathOfTheAngirisTargetRemovedStasis") > 0.125)) {
        UnitSetPosition(lv_wrathOfTheAngirisTargetUnit, UnitGetPosition(lv_wrathOfTheAngirisImperiusUnit), true);
        Wait(0.0625, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libHIMP_gt_HeroImperiusWrathOfTheAngirisTargetTeleport_Init () {
    libHIMP_gt_HeroImperiusWrathOfTheAngirisTargetTeleport = TriggerCreate("libHIMP_gt_HeroImperiusWrathOfTheAngirisTargetTeleport_Func");
    TriggerEnable(libHIMP_gt_HeroImperiusWrathOfTheAngirisTargetTeleport, false);
    TriggerAddEventUnitBehaviorChange(libHIMP_gt_HeroImperiusWrathOfTheAngirisTargetTeleport, null, "ImperiusWrathOfTheAngirisTargetRemovedStasis", c_unitBehaviorChangeActivate);
}

void libHIMP_InitTriggers () {
    libHIMP_gt_HeroImperiusCelestialChargeTargetUnitAlignment_Init();
    libHIMP_gt_HeroImperiusCelestialChargeTimeStopHandler_Init();
    libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayShow_Init();
    libHIMP_gt_HeroImperiusWrathOfTheAngirisOverlayHide_Init();
    libHIMP_gt_HeroImperiusWrathOfTheAngirisAIControl_Init();
    libHIMP_gt_HeroImperiusWrathOfTheAngirisImperiusTeleport_Init();
    libHIMP_gt_HeroImperiusWrathOfTheAngirisTargetTeleport_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libHIMP_InitLib_completed = false;

void libHIMP_InitLib () {
    if (libHIMP_InitLib_completed) {
        return;
    }

    libHIMP_InitLib_completed = true;

    libHIMP_InitLibraries();
    libHIMP_InitVariables();
    libHIMP_InitTriggers();
}

