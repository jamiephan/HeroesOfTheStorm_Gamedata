include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Day Night Cycle Mod
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libDNCM_ge_WeatherUIModes_Idle = 0;
const int libDNCM_ge_WeatherUIModes_RainOn = 1;
const int libDNCM_ge_WeatherUIModes_RainOff = 2;
const int libDNCM_ge_WeatherUIModes_SnowOn = 3;
const int libDNCM_ge_WeatherUIModes_SnowOff = 4;
const int libDNCM_ge_WeatherUIModes_FogOn = 5;
const int libDNCM_ge_WeatherUIModes_FogOff = 6;
const int libDNCM_ge_WeatherTypes_NoWeather = 0;
const int libDNCM_ge_WeatherTypes_Rain = 1;
const int libDNCM_ge_WeatherTypes_Snow = 2;
const int libDNCM_ge_WeatherTypes_Sandstorm = 3;
const int libDNCM_ge_WeatherTypes_Fog = 4;
const int libDNCM_ge_WeatherTypes_Sun = 5;

// Structures
struct libDNCM_gs_WeatherPanel {
    int lv_mainPanel;
    int lv_weatherFrame;
    int lv_rainOnFrame;
    int lv_rainOffFrame;
    int lv_snowOnFrame;
    int lv_snowOffFrame;
    int lv_fogOnFrame;
    int lv_fogOffFrame;
    int lv_weatherTimerLabel;
};

// Variable Declarations
libDNCM_gs_WeatherPanel libDNCM_gv_weatherPanel;
bool libDNCM_gv_weatherUIFailedInitialization;
unitgroup libDNCM_gv_weatherWeatherUnits;
bool libDNCM_gv_weatherSystemInitialized;
int libDNCM_gv_weatherType;
bool libDNCM_gv_weatherSystemEnabled;
timer libDNCM_gv_weatherTimer;
fixed libDNCM_gv_weatherTime;
fixed libDNCM_gv_weatherTime2;
fixed libDNCM_gv_weatherTimeModifier;
timer libDNCM_gv_weatherInitialTimer;
fixed libDNCM_gv_weatherInitialTime;
bool libDNCM_gv_weatherWeatherInactive;
bool libDNCM_gv_weatherWeatherActive;
bool libDNCM_gv_weatherActiveAtStart;
bool libDNCM_gv_weatherMapBasedWeather;
bool libDNCM_gv_weatherSystemRainActive;
bool libDNCM_gv_weatherSystemFirstRain;
timer libDNCM_gv_weatherSystemLightningTimer;
fixed libDNCM_gv_weatherSystemLightningTimerDuration;
sound libDNCM_gv_weatherSystemRainLoop;
bool libDNCM_gv_weatherSystemSnowActive;
bool libDNCM_gv_weatherSystemFogActive;
bool libDNCM_gv_weatherSystemSunActive;
bool libDNCM_gv_weatherSystemSandActive;
bool libDNCM_gv_dEBUGDayNightSystemIsSystemEnabled;
string libDNCM_gv_dEBUGDayNightCycleLight;
timer libDNCM_gv_dEBUGDayNightCycleCycleTimer;
fixed libDNCM_gv_dEBUGDayNightCycleTime;
fixed libDNCM_gv_dEBUGDayNightCycleDayTimeModifier;
bool libDNCM_gv_dEBUGDayNightCycleIsDayTime;
bool libDNCM_gv_dEBUGDayNightCycleIsNightTime;
bool libDNCM_gv_dEBUGDayNightCycleReminderTriggered;

// Function Declarations
void libDNCM_gf_WeatherUIShowHidePanel (bool lp_showHide);
void libDNCM_gf_WeatherUISetMode (int lp_mode);
void libDNCM_gf_WeatherUIInit (int lp_parentPanel);
void libDNCM_gf_InitializeWeatherSystem ();
void libDNCM_gf_WeatherDecideWeatherType (bool lp_mapBased);
void libDNCM_gf_WeatherActivateWeather (bool lp_startNow);
void libDNCM_gf_EnableDisableWeather ();
void libDNCM_gf_StartWeather (int lp_weatherType);
void libDNCM_gf_StopWeather (int lp_weatherType);
point libDNCM_gf_WeatherSystemFindPlayerConflict ();
void libDNCM_gf_WeatherSystemCreateLightningStrikes ();
void libDNCM_gf_WeatherSystemStrikeAllPlayers ();
void libDNCM_gf_WeatherSystemGrantRemoveSnowBuff (bool lp_enableDisable);
void libDNCM_gf_WeatherSystemEnableDisableFogEffects (bool lp_enableDisable);
void libDNCM_gf_DEBUGDayNightCycleLightingEventStart ();
void libDNCM_gf_DEBUGDayNightCycleFlipDayNight ();
void libDNCM_gf_DEBUGDayNightCycleEnableDisableSharedVision (bool lp_enableDisable);

// Trigger Declarations
trigger libDNCM_gt_WeatherCoreUIHandler;
trigger libDNCM_gt_DEBUGWeatherSetWeatherType;
trigger libDNCM_gt_DEBUGWeatherDisableWeather;
trigger libDNCM_gt_DEBUGWeatherEnableWeather;
trigger libDNCM_gt_WeatherStartSystem;
trigger libDNCM_gt_WeatherInitialTimerExpires;
trigger libDNCM_gt_WeatherWeatherTimerExpires;
trigger libDNCM_gt_WeatherSystemRainStormPeriodicLightningStrike;
trigger libDNCM_gt_WeatherSystemApplyLightningBuff;
trigger libDNCM_gt_DEBUGDayNightCycleReminder;
trigger libDNCM_gt_DEBUGDayNightCycleTurnOnOffSystem;
trigger libDNCM_gt_DEBUGDayNightCycleSetDayOrNight;
trigger libDNCM_gt_DEBUGDayNightCycleTimerExpires;

// Library Initialization
void libDNCM_InitVariables ();

